import React, { useEffect, useState } from "react";
import axios from "axios";
import "./EditCard.css";

const EditCard = () => {
  // State to manage the card list
  const [cards, setCards] = useState([]);
  const [editCard, setEditCard] = useState(null);
  const [autoGeneratedId, setAutoGeneratedId] = useState(1); // Initial ID

  //fetch card details from API
  useEffect(() => {
    axios.get("http://localhost:8070/payment/getpayments").then((response) => {
      setCards(response.data); // Assuming API returns an array of payment data
    }).catch((err)=>{
      alert(err.message);
    })
  }, []);

  // Function to handle editing a card
  const handleEditCard = (card) => {
    setEditCard(card);
  };

  // Function to handle updating a card
  const handleUpdateCard = () => {
    axios.put(`http://localhost:8070/payment/updatepayment/${editCard.id}`, editCard)
      .then((response) => {
        const updatedCard = response.data;
        const updatedCards = cards.map((c) =>
          c.id === updatedCard.id ? updatedCard : c
        );
        setCards(updatedCards);
        setEditCard(null); // Clear the editing state
      })
      .catch((err) => {
        alert(err.message);
      });
  };

  //delete card details
  const handleDeleteCard = (cardId) => {
    axios.delete(`http://localhost:8070/payment/deletepayment/${cardId}`)
      .then(() => {
        const updatedCards = cards.filter((card) => card.id !== cardId);
        setCards(updatedCards);
      })
      .catch((err) => {
        alert(err.message);
      });
  };

  //cancel editing
  const handleCancelEdit = () => {
    setEditCard(null);
  };

  return (
    <div className="edit-card-container">
      <h2>Edit Card Details</h2>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Card Name</th>
            <th>Card Number</th>
            <th>Expiry Date</th>
            <th>CVV</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {cards.map((card, index) => (
            <tr key={index}>
              <td>{autoGeneratedId + index}</td>
              <td>{editCard?.id === card.id ? <input type="text" defaultValue={card.cardName} onChange={(e) => setEditCard({ ...card, cardName: e.target.value })} /> : card.cardName}</td>
              <td>{editCard?.id === card.id ? <input type="text" defaultValue={card.cardNumber} onChange={(e) => setEditCard({ ...card, cardNumber: e.target.value })} /> : card.cardNumber}</td>
              <td>{editCard?.id === card.id ? <input type="text" defaultValue={card.expiryDate} onChange={(e) => setEditCard({ ...card, expiryDate: e.target.value })} /> : card.expiryDate}</td>
              <td>{editCard?.id === card.id ? <input type="text" defaultValue={card.cvv} onChange={(e) => setEditCard({ ...card, cvv: e.target.value })} /> : card.cvv}</td>
              <td>
                {editCard?.id === card.id ? (
                  <>
                    <button className="save-button" onClick={handleUpdateCard}>Save</button>
                    <button className="cancel-button" onClick={handleCancelEdit}>Cancel</button>
                  </>
                ) : (
                  <>
                    <button className="edit-button" onClick={() => handleEditCard(card)}>Edit</button>
                    <button className="delete-button" onClick={() => handleDeleteCard(card.id)}>Delete</button>
                  </>
                )}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default EditCard;
